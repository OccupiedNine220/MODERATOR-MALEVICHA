const { EmbedBuilder } = require('discord.js');
const config = require('../config');
const moment = require('moment');

/**
 * –û—Ç–ø—Ä–∞–≤–∫–∞ –ª–æ–≥–∞ –≤ –∫–∞–Ω–∞–ª –ª–æ–≥–æ–≤
 * @param {Object} guild - –û–±—ä–µ–∫—Ç —Å–µ—Ä–≤–µ—Ä–∞ Discord
 * @param {string} message - –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
 * @param {Object} options - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
 */
async function logAction(guild, message, options = {}) {
    const logChannel = guild.channels.cache.get(config.logChannelId);
    if (!logChannel) return;

    if (options.embed) {
        await logChannel.send({ embeds: [options.embed] });
    } else {
        const timestamp = moment().format('DD.MM.YYYY HH:mm:ss');
        await logChannel.send(`[${timestamp}] ${message}`);
    }
}

/**
 * –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
 * @param {Object} guild - –°–µ—Ä–≤–µ—Ä Discord
 * @param {Object} moderator - –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä
 * @param {Object} target - –¶–µ–ª—å –º–æ–¥–µ—Ä–∞—Ü–∏–∏
 * @param {string} action - –î–µ–π—Å—Ç–≤–∏–µ (ban, kick, mute, etc.)
 * @param {string} reason - –ü—Ä–∏—á–∏–Ω–∞
 */
async function logModeration(guild, moderator, target, action, reason, duration = null) {
    const colors = {
        ban: 0xFF0000,      // –ö—Ä–∞—Å–Ω—ã–π
        kick: 0xFF9900,     // –û—Ä–∞–Ω–∂–µ–≤—ã–π
        mute: 0xFFCC00,     // –ñ–µ–ª—Ç—ã–π
        warn: 0x00CCFF,     // –ì–æ–ª—É–±–æ–π
        unmute: 0x00FF00,   // –ó–µ–ª–µ–Ω—ã–π
        unban: 0x00FF00     // –ó–µ–ª–µ–Ω—ã–π
    };
    
    const titles = {
        ban: 'üî® –ë–∞–Ω —É—á–∞—Å—Ç–Ω–∏–∫–∞',
        kick: 'üë¢ –ö–∏–∫ —É—á–∞—Å—Ç–Ω–∏–∫–∞',
        mute: 'üîá –ú—É—Ç —É—á–∞—Å—Ç–Ω–∏–∫–∞',
        warn: '‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞',
        unmute: 'üîä –†–∞–∑–º—É—Ç —É—á–∞—Å—Ç–Ω–∏–∫–∞',
        unban: 'üîì –†–∞–∑–±–∞–Ω —É—á–∞—Å—Ç–Ω–∏–∫–∞'
    };
    
    const embed = new EmbedBuilder()
        .setTitle(titles[action] || '–ú–æ–¥–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ')
        .setColor(colors[action] || 0x0099FF)
        .addFields(
            { name: '–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä', value: moderator.toString(), inline: true },
            { name: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', value: target.toString(), inline: true }
        )
        .setTimestamp();
    
    if (reason) {
        embed.addFields({ name: '–ü—Ä–∏—á–∏–Ω–∞', value: reason, inline: false });
    }
    
    if (duration) {
        embed.addFields({ name: '–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å', value: duration, inline: false });
    }
    
    if (target.user && target.user.displayAvatarURL) {
        embed.setThumbnail(target.user.displayAvatarURL({ dynamic: true }));
    }
    
    await logAction(guild, '', { embed });
}

/**
 * –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π —Å–æ–æ–±—â–µ–Ω–∏–π
 * @param {Object} oldMessage - –°—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
 * @param {Object} newMessage - –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
 */
async function logMessageEdit(oldMessage, newMessage) {
    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –±–æ—Ç–æ–≤ –∏ –µ—Å–ª–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å
    if (oldMessage.author.bot || oldMessage.content === newMessage.content) return;
    
    const embed = new EmbedBuilder()
        .setTitle('‚úèÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–æ')
        .setColor(0x0099FF)
        .addFields(
            { name: '–ê–≤—Ç–æ—Ä', value: oldMessage.author.toString(), inline: true },
            { name: '–ö–∞–Ω–∞–ª', value: oldMessage.channel.toString(), inline: true },
            { name: '–°—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ', value: oldMessage.content.substring(0, 1024) || '*–ü—É—Å—Ç–æ*', inline: false },
            { name: '–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ', value: newMessage.content.substring(0, 1024) || '*–ü—É—Å—Ç–æ*', inline: false }
        )
        .setTimestamp()
        .setFooter({ text: `ID: ${oldMessage.id}` });
    
    const messageUrl = `https://discord.com/channels/${oldMessage.guild.id}/${oldMessage.channel.id}/${oldMessage.id}`;
    embed.addFields({ name: '–°—Å—ã–ª–∫–∞', value: `[–ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é](${messageUrl})`, inline: false });
    
    await logAction(oldMessage.guild, '', { embed });
}

/**
 * –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
 * @param {Object} message - –£–¥–∞–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
 */
async function logMessageDelete(message) {
    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –±–æ—Ç–æ–≤
    if (message.author.bot) return;
    
    const embed = new EmbedBuilder()
        .setTitle('üóëÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ')
        .setColor(0xFF0000)
        .addFields(
            { name: '–ê–≤—Ç–æ—Ä', value: message.author.toString(), inline: true },
            { name: '–ö–∞–Ω–∞–ª', value: message.channel.toString(), inline: true },
            { name: '–°–æ–¥–µ—Ä–∂–∏–º–æ–µ', value: message.content.substring(0, 1024) || '*–ü—É—Å—Ç–æ*', inline: false }
        )
        .setTimestamp()
        .setFooter({ text: `ID: ${message.id}` });
    
    if (message.attachments.size > 0) {
        let attachmentsList = [];
        message.attachments.forEach(attachment => {
            attachmentsList.push(`[${attachment.name}](${attachment.url})`);
        });
        embed.addFields({ name: '–í–ª–æ–∂–µ–Ω–∏—è', value: attachmentsList.join('\n').substring(0, 1024) || '*–ù–µ—Ç*', inline: false });
    }
    
    await logAction(message.guild, '', { embed });
}

module.exports = {
    logAction,
    logModeration,
    logMessageEdit,
    logMessageDelete
}; 