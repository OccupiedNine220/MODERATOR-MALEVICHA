const { Clan } = require('../models/schema');
const { EmbedBuilder } = require('discord.js');

// –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π –¥–ª—è –∫–ª–∞–Ω–æ–≤
const clanTasks = [
    {
        id: 'activity',
        name: '–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
        description: '–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ —á–∞—Ç–µ –∏ –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–∞—Ö',
        reward: { exp: 50, power: 5 },
        difficulty: '–õ–µ–≥–∫–æ–µ'
    },
    {
        id: 'members',
        name: '–ù–∞–±–æ—Ä —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤',
        description: '–ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –±–æ–ª—å—à–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ —Å–≤–æ–π –∫–ª–∞–Ω',
        reward: { exp: 100, power: 10 },
        difficulty: '–°—Ä–µ–¥–Ω–µ–µ'
    },
    {
        id: 'events',
        name: '–£—á–∞—Å—Ç–∏–µ –≤ —Å–æ–±—ã—Ç–∏—è—Ö',
        description: '–£—á–∞—Å—Ç–∏–µ –≤ —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö –∏ –∫–æ–Ω–∫—É—Ä—Å–∞—Ö',
        reward: { exp: 200, power: 15 },
        difficulty: '–°–ª–æ–∂–Ω–æ–µ'
    },
    {
        id: 'cooperation',
        name: '–°–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ',
        description: '–°–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ —Å –¥—Ä—É–≥–∏–º–∏ –∫–ª–∞–Ω–∞–º–∏',
        reward: { exp: 150, power: 20 },
        difficulty: '–°–ª–æ–∂–Ω–æ–µ'
    }
];

/**
 * –î–æ–±–∞–≤–ª—è–µ—Ç –æ–ø—ã—Ç –∫–ª–∞–Ω—É
 * @param {string} clanName - –ù–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∞–Ω–∞
 * @param {number} exp - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–ø—ã—Ç–∞
 * @returns {Promise<Object>} - –û–±—ä–µ–∫—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–ª–∞–Ω–µ –∏ –ø–æ–≤—ã—à–µ–Ω–∏–∏ —É—Ä–æ–≤–Ω—è
 */
async function addClanExp(clanName, exp) {
    const clan = await Clan.findOne({ name: clanName });
    
    if (!clan) {
        throw new Error(`–ö–ª–∞–Ω "${clanName}" –Ω–µ –Ω–∞–π–¥–µ–Ω!`);
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–ø—ã—Ç
    clan.exp += exp;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∏–≥ –ª–∏ –∫–ª–∞–Ω –Ω–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è
    const levelUpExp = clan.level * 1000;
    let levelUp = false;
    
    while (clan.exp >= levelUpExp) {
        clan.exp -= levelUpExp;
        clan.level += 1;
        clan.power += 25; // –ë–æ–Ω—É—Å —Å–∏–ª—ã –∑–∞ –Ω–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å
        levelUp = true;
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    await clan.save();
    
    return {
        clan,
        levelUp,
        newLevel: clan.level,
        remainingExp: clan.exp,
        nextLevelExp: clan.level * 1000
    };
}

/**
 * –í—ã–¥–∞–µ—Ç –Ω–∞–≥—Ä–∞–¥—É –∫–ª–∞–Ω—É –∑–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è
 * @param {string} clanName - –ù–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∞–Ω–∞
 * @param {string} taskId - ID –∑–∞–¥–∞–Ω–∏—è
 * @returns {Promise<Object>} - –û–±—ä–µ–∫—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –Ω–∞–≥—Ä–∞–¥–µ
 */
async function rewardClanForTask(clanName, taskId) {
    const task = clanTasks.find(t => t.id === taskId);
    
    if (!task) {
        throw new Error(`–ó–∞–¥–∞–Ω–∏–µ —Å ID "${taskId}" –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!`);
    }
    
    const clan = await Clan.findOne({ name: clanName });
    
    if (!clan) {
        throw new Error(`–ö–ª–∞–Ω "${clanName}" –Ω–µ –Ω–∞–π–¥–µ–Ω!`);
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–≥—Ä–∞–¥—ã –∫–ª–∞–Ω—É
    const expResult = await addClanExp(clanName, task.reward.exp);
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å–∏–ª—É
    clan.power += task.reward.power;
    await clan.save();
    
    return {
        task,
        reward: task.reward,
        clan: expResult.clan,
        levelUp: expResult.levelUp,
        newLevel: expResult.newLevel
    };
}

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ –¥–ª—è –∫–ª–∞–Ω–∞
 * @returns {Object} - –°–ª—É—á–∞–π–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ
 */
function getRandomTask() {
    const randomIndex = Math.floor(Math.random() * clanTasks.length);
    return clanTasks[randomIndex];
}

/**
 * –°–æ–∑–¥–∞–µ—Ç —ç–º–±–µ–¥ —Å —Ç–æ–ø–æ–º –∫–ª–∞–Ω–æ–≤
 * @param {Array} clans - –ú–∞—Å—Å–∏–≤ –∫–ª–∞–Ω–æ–≤
 * @returns {EmbedBuilder} - –≠–º–±–µ–¥ —Å —Ç–æ–ø–æ–º –∫–ª–∞–Ω–æ–≤
 */
function createClanTopEmbed(clans) {
    const embed = new EmbedBuilder()
        .setTitle('üèÜ –¢–æ–ø –∫–ª–∞–Ω–æ–≤')
        .setDescription('–†–µ–π—Ç–∏–Ω–≥ –∫–ª–∞–Ω–æ–≤ —Å–µ—Ä–≤–µ—Ä–∞ –ø–æ —É—Ä–æ–≤–Ω—é –∏ —Å–∏–ª–µ')
        .setColor('#FFD700')
        .setTimestamp();
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —ç–º–æ–¥–∑–∏ –¥–ª—è —Ç–æ–ø-3
    const rankEmojis = ['ü•á', 'ü•à', 'ü•â'];
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–ª–∞–Ω–∞ –≤ —Ç–æ–ø-10
    clans.slice(0, 10).forEach((clan, index) => {
        const rankDisplay = index < 3 ? rankEmojis[index] : `${index + 1}.`;
        
        embed.addFields({
            name: `${rankDisplay} ${clan.emoji} ${clan.name}`,
            value: `–£—Ä–æ–≤–µ–Ω—å: ${clan.level} | –°–∏–ª–∞: ${clan.power} | –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: ${clan.members.length}\n–í–ª–∞–¥–µ–ª–µ—Ü: <@${clan.owner}>`
        });
    });
    
    return embed;
}

/**
 * –°–æ–∑–¥–∞–µ—Ç —ç–º–±–µ–¥ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–ª–∞–Ω–µ
 * @param {Object} clan - –û–±—ä–µ–∫—Ç –∫–ª–∞–Ω–∞
 * @param {Object} client - Discord –∫–ª–∏–µ–Ω—Ç
 * @returns {Promise<EmbedBuilder>} - –≠–º–±–µ–¥ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–ª–∞–Ω–µ
 */
async function createClanInfoEmbed(clan, client) {
    const memberCount = clan.members.length;
    const ownerTag = await client.users.fetch(clan.owner).then(user => user.tag).catch(() => '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å');
    
    const embed = new EmbedBuilder()
        .setTitle(`${clan.emoji} –ö–ª–∞–Ω: ${clan.name}`)
        .setDescription(clan.description)
        .addFields(
            { name: '–í–ª–∞–¥–µ–ª–µ—Ü', value: `<@${clan.owner}> (${ownerTag})`, inline: true },
            { name: '–£—á–∞—Å—Ç–Ω–∏–∫–∏', value: memberCount.toString(), inline: true },
            { name: '–£—Ä–æ–≤–µ–Ω—å', value: clan.level.toString(), inline: true },
            { name: '–û–ø—ã—Ç', value: `${clan.exp}/${clan.level * 1000}`, inline: true },
            { name: '–°–∏–ª–∞', value: clan.power.toString(), inline: true }
        )
        .setColor('#2b2d31')
        .setTimestamp();
    
    let membersText = '';
    
    for (const memberId of clan.members.slice(0, 10)) {
        const user = await client.users.fetch(memberId).catch(() => null);
        if (user) {
            membersText += `<@${memberId}> (${user.tag})\n`;
        } else {
            membersText += `<@${memberId}> (–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å)\n`;
        }
    }
    
    if (clan.members.length > 10) {
        membersText += `...–∏ –µ—â–µ ${clan.members.length - 10} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤`;
    }
    
    embed.addFields({ name: '–°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤', value: membersText || '–ù–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤' });
    
    return embed;
}

/**
 * –°–æ–∑–¥–∞–µ—Ç —ç–º–±–µ–¥ —Å –Ω–∞–≥—Ä–∞–¥–æ–π –¥–ª—è –∫–ª–∞–Ω–∞
 * @param {Object} rewardInfo - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∞–≥—Ä–∞–¥–µ
 * @returns {EmbedBuilder} - –≠–º–±–µ–¥ —Å –Ω–∞–≥—Ä–∞–¥–æ–π
 */
function createRewardEmbed(rewardInfo) {
    const embed = new EmbedBuilder()
        .setTitle(`üéÅ –ù–∞–≥—Ä–∞–¥–∞ –¥–ª—è –∫–ª–∞–Ω–∞ ${rewardInfo.clan.emoji} ${rewardInfo.clan.name}`)
        .setDescription(`–ö–ª–∞–Ω –ø–æ–ª—É—á–∏–ª –Ω–∞–≥—Ä–∞–¥—É –∑–∞ –∑–∞–¥–∞–Ω–∏–µ: **${rewardInfo.task.name}**`)
        .addFields(
            { name: '–ü–æ–ª—É—á–µ–Ω–Ω—ã–π –æ–ø—ã—Ç', value: `+${rewardInfo.reward.exp} XP`, inline: true },
            { name: '–ü–æ–ª—É—á–µ–Ω–Ω–∞—è —Å–∏–ª–∞', value: `+${rewardInfo.reward.power} —Å–∏–ª—ã`, inline: true }
        )
        .setColor('#00FF00')
        .setTimestamp();
    
    if (rewardInfo.levelUp) {
        embed.addFields({
            name: 'üéâ –ü–æ–≤—ã—à–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è!',
            value: `–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –ö–ª–∞–Ω –¥–æ—Å—Ç–∏–≥ **${rewardInfo.newLevel}** —É—Ä–æ–≤–Ω—è!`
        });
    }
    
    return embed;
}

/**
 * –°–æ–∑–¥–∞–µ—Ç —ç–º–±–µ–¥ —Å –∑–∞–¥–∞–Ω–∏—è–º–∏ –¥–ª—è –∫–ª–∞–Ω–∞
 * @returns {EmbedBuilder} - –≠–º–±–µ–¥ —Å –∑–∞–¥–∞–Ω–∏—è–º–∏
 */
function createTasksEmbed() {
    const embed = new EmbedBuilder()
        .setTitle('üìã –ó–∞–¥–∞–Ω–∏—è –¥–ª—è –∫–ª–∞–Ω–æ–≤')
        .setDescription('–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π –¥–ª—è –∫–ª–∞–Ω–æ–≤')
        .setColor('#4B0082')
        .setTimestamp();
    
    clanTasks.forEach(task => {
        embed.addFields({
            name: `${task.name} (${task.difficulty})`,
            value: `ID: \`${task.id}\`\n${task.description}\n–ù–∞–≥—Ä–∞–¥–∞: ${task.reward.exp} XP, ${task.reward.power} —Å–∏–ª—ã`
        });
    });
    
    return embed;
}

module.exports = {
    clanTasks,
    addClanExp,
    rewardClanForTask,
    getRandomTask,
    createClanTopEmbed,
    createClanInfoEmbed,
    createRewardEmbed,
    createTasksEmbed
}; 