const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');
const { isAdmin } = require('../../utils/permissions');
const { logModeration } = require('../../utils/logger');
const { ModStats } = require('../../models/schema');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('–∫–∏–∫')
        .setDescription('–í—ã–≥–Ω–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Å–µ—Ä–≤–µ—Ä–∞')
        .addUserOption(option => 
            option.setName('–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')
                .setDescription('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –≤—ã–≥–Ω–∞—Ç—å')
                .setRequired(true))
        .addStringOption(option => 
            option.setName('–ø—Ä–∏—á–∏–Ω–∞')
                .setDescription('–ü—Ä–∏—á–∏–Ω–∞ –∫–∏–∫–∞')
                .setRequired(true)),
    
    async execute(interaction) {
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤
        if (!isAdmin(interaction.member)) {
            return interaction.reply({
                content: 'üö´ –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.',
                ephemeral: true
            });
        }

        const targetUser = interaction.options.getUser('–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å');
        const targetMember = await interaction.guild.members.fetch(targetUser.id).catch(() => null);
        
        if (!targetMember) {
            return interaction.reply({
                content: '‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.',
                ephemeral: true
            });
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if (targetUser.id === interaction.user.id) {
            return interaction.reply({
                content: 'üôÖ –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∫–∏–∫–Ω—É—Ç—å —Å–µ–±—è!',
                ephemeral: true
            });
        }

        if (targetUser.bot) {
            return interaction.reply({
                content: 'ü§ñ –ù–µ–ª—å–∑—è –∫–∏–∫–Ω—É—Ç—å –±–æ—Ç–∞!',
                ephemeral: true
            });
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞, –º–æ–∂–µ–º –ª–∏ –º—ã –∫–∏–∫–Ω—É—Ç—å —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if (!targetMember.kickable) {
            return interaction.reply({
                content: '‚ùå –Ø –Ω–µ –º–æ–≥—É –≤—ã–≥–Ω–∞—Ç—å —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ —Ä–æ–ª–µ–π.',
                ephemeral: true
            });
        }

        const reason = interaction.options.getString('–ø—Ä–∏—á–∏–Ω–∞');
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª–∏–Ω—ã –ø—Ä–∏—á–∏–Ω—ã
        if (reason.length > 500) {
            return interaction.reply({
                content: 'üìù –ü—Ä–∏—á–∏–Ω–∞ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–∞—è. –ú–∞–∫—Å–∏–º—É–º 500 —Å–∏–º–≤–æ–ª–æ–≤.',
                ephemeral: true
            });
        }

        try {
            // –ö–∏–∫–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            await targetMember.kick(reason);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
            await ModStats.findOneAndUpdate(
                { userId: interaction.user.id, guildId: interaction.guild.id },
                { $inc: { 'actions.kicks': 1 } },
                { upsert: true }
            );
            
            // –°–æ–∑–¥–∞–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —ç–º–±–µ–¥
            const embed = new EmbedBuilder()
                .setTitle('–ö–∏–∫ —É—á–∞—Å—Ç–Ω–∏–∫–∞')
                .setDescription(`${targetUser} –±—ã–ª –≤—ã–≥–Ω–∞–Ω —Å —Å–µ—Ä–≤–µ—Ä–∞.`)
                .setColor(0xFF9900)
                .addFields(
                    { name: '–ü—Ä–∏—á–∏–Ω–∞', value: reason, inline: false }
                )
                .setThumbnail(targetUser.displayAvatarURL({ dynamic: true }))
                .setFooter({ text: `–ö–∏–∫–Ω—É–ª: ${interaction.user.tag}`, iconURL: interaction.user.displayAvatarURL({ dynamic: true }) })
                .setTimestamp();
            
            await interaction.reply({ embeds: [embed] });
            
            // –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
            await logModeration(
                interaction.guild,
                interaction.user,
                targetUser,
                'kick',
                reason
            );
            
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–∏–∫–µ:', error);
            return interaction.reply({
                content: `üÜò –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: ${error.message}`,
                ephemeral: true
            });
        }
    }
}; 