const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');
const { isMod } = require('../../utils/permissions');
const { logModeration } = require('../../utils/logger');
const { Warning, ModStats } = require('../../models/schema');
const rules = require('../../models/rules');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('–≤–∞—Ä–Ω')
        .setDescription('–í—ã–¥–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é')
        .addUserOption(option => 
            option.setName('–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')
                .setDescription('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∫–æ—Ç–æ—Ä–æ–º—É –Ω—É–∂–Ω–æ –≤—ã–¥–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ')
                .setRequired(true))
        .addStringOption(option => 
            option.setName('–ø—Ä–∞–≤–∏–ª–æ')
                .setDescription('ID –Ω–∞—Ä—É—à–µ–Ω–Ω–æ–≥–æ –ø—Ä–∞–≤–∏–ª–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 1.1, 2.3)')
                .setRequired(true)),
    
    async execute(interaction) {
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤
        if (!isMod(interaction.member)) {
            return interaction.reply({
                content: 'üö´ –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.',
                ephemeral: true
            });
        }

        const targetUser = interaction.options.getUser('–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å');
        const targetMember = await interaction.guild.members.fetch(targetUser.id).catch(() => null);
        
        if (!targetMember) {
            return interaction.reply({
                content: '‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.',
                ephemeral: true
            });
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if (targetUser.id === interaction.user.id) {
            return interaction.reply({
                content: '‚ùì –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–¥–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ —Å–µ–±–µ!',
                ephemeral: true
            });
        }

        if (targetUser.bot) {
            return interaction.reply({
                content: '‚ùå –ù–µ–ª—å–∑—è –≤—ã–¥–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –±–æ—Ç—É!',
                ephemeral: true
            });
        }

        // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–∞–≤–∏–ª–æ –∏–∑ id
        const ruleId = interaction.options.getString('–ø—Ä–∞–≤–∏–ª–æ');
        const rule = rules.rules[ruleId];
        
        if (!rule) {
            return interaction.reply({
                content: `‚ùå –ü—Ä–∞–≤–∏–ª–æ —Å ID "${ruleId}" –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.`,
                ephemeral: true
            });
        }

        try {
            // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
            const warningDoc = await Warning.findOne({
                userId: targetUser.id, 
                guildId: interaction.guild.id
            });
            
            if (warningDoc) {
                // –£–∂–µ –µ—Å—Ç—å –∑–∞–ø–∏—Å—å, –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
                warningDoc.warnings.push({
                    ruleId: ruleId,
                    reason: rule.description,
                    moderatorId: interaction.user.id,
                    timestamp: new Date()
                });
                await warningDoc.save();
            } else {
                // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å
                await Warning.create({
                    userId: targetUser.id,
                    guildId: interaction.guild.id,
                    warnings: [{
                        ruleId: ruleId,
                        reason: rule.description,
                        moderatorId: interaction.user.id,
                        timestamp: new Date()
                    }]
                });
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
            await ModStats.findOneAndUpdate(
                { userId: interaction.user.id, guildId: interaction.guild.id },
                { $inc: { 'actions.warns': 1 } },
                { upsert: true }
            );
            
            // –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π
            const updatedWarningDoc = await Warning.findOne({
                userId: targetUser.id, 
                guildId: interaction.guild.id
            });
            
            const warnCount = updatedWarningDoc.warnings.length;
            
            // –°–æ–∑–¥–∞–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —ç–º–±–µ–¥
            const embed = new EmbedBuilder()
                .setTitle('–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –≤—ã–¥–∞–Ω–æ')
                .setDescription(`${targetUser} –ø–æ–ª—É—á–∏–ª –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ (${warnCount}).`)
                .setColor(0x00CCFF)
                .addFields(
                    { name: '–ü—Ä–∞–≤–∏–ª–æ', value: `${ruleId}: ${rule.description}`, inline: false }
                )
                .setThumbnail(targetUser.displayAvatarURL({ dynamic: true }))
                .setFooter({ text: `–í—ã–¥–∞–ª: ${interaction.user.tag}`, iconURL: interaction.user.displayAvatarURL({ dynamic: true }) })
                .setTimestamp();
            
            await interaction.reply({ embeds: [embed] });
            
            // –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
            await logModeration(
                interaction.guild,
                interaction.user,
                targetUser,
                'warn',
                `–ü—Ä–∞–≤–∏–ª–æ ${ruleId}: ${rule.description}`
            );
            
            // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –¥–µ–π—Å—Ç–≤–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π
            if (warnCount === 3) {
                await targetMember.timeout(60 * 60 * 1000, '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –º—É—Ç –∑–∞ 3 –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è');
                await interaction.channel.send(
                    `${targetUser} –±—ã–ª –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–º—É—á–µ–Ω –Ω–∞ 1 —á–∞—Å –∑–∞ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–µ 3 –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π.`
                );
            } else if (warnCount === 5) {
                await targetMember.kick('–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∫–∏–∫ –∑–∞ 5 –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π');
                await interaction.channel.send(
                    `${targetUser} –±—ã–ª –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫–∏–∫–Ω—É—Ç –∑–∞ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–µ 5 –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π.`
                );
            } else if (warnCount >= 7) {
                await interaction.guild.members.ban(targetUser, { reason: '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –±–∞–Ω –∑–∞ 7 –∏–ª–∏ –±–æ–ª–µ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π' });
                await Warning.findOneAndDelete({ userId: targetUser.id, guildId: interaction.guild.id });
                await interaction.channel.send(
                    `${targetUser} –±—ã–ª –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–±–∞–Ω–µ–Ω –∑–∞ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–µ 7 –∏–ª–∏ –±–æ–ª–µ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π.`
                );
            }
            
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–¥–∞—á–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è:', error);
            return interaction.reply({
                content: `‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: ${error.message}`,
                ephemeral: true
            });
        }
    }
}; 