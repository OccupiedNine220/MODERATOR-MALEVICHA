const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');
const axios = require('axios');
const config = require('../../config');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('–ø–æ–≥–æ–¥–∞')
        .setDescription('–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–≥–æ–¥—É –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –≥–æ—Ä–æ–¥–µ')
        .addStringOption(option =>
            option.setName('–≥–æ—Ä–æ–¥')
                .setDescription('–ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞')
                .setRequired(true)),
    
    async execute(interaction) {
        await interaction.deferReply();
        
        const city = interaction.options.getString('–≥–æ—Ä–æ–¥');
        
        try {
            const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather`, {
                params: {
                    q: city,
                    appid: config.weatherApiKey,
                    units: 'metric',
                    lang: 'ru'
                }
            });
            
            const weatherData = response.data;
            const temperature = Math.round(weatherData.main.temp);
            const feelsLike = Math.round(weatherData.main.feels_like);
            const description = weatherData.weather[0].description;
            const icon = weatherData.weather[0].icon;
            const humidity = weatherData.main.humidity;
            const windSpeed = weatherData.wind.speed;
            const pressure = Math.round(weatherData.main.pressure * 0.75); // –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∏–∑ –≥–ü–∞ –≤ –º–º —Ä—Ç.—Å—Ç.
            
            const weatherEmbed = new EmbedBuilder()
                .setTitle(`üå°Ô∏è –ü–æ–≥–æ–¥–∞: ${weatherData.name}, ${weatherData.sys.country}`)
                .setColor(0x3498DB)
                .setThumbnail(`http://openweathermap.org/img/wn/${icon}@2x.png`)
                .addFields(
                    { name: '–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞', value: `${temperature}¬∞C (–æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ ${feelsLike}¬∞C)`, inline: true },
                    { name: '–°–æ—Å—Ç–æ—è–Ω–∏–µ', value: description, inline: true },
                    { name: '\u200B', value: '\u200B', inline: true },
                    { name: '–í–ª–∞–∂–Ω–æ—Å—Ç—å', value: `${humidity}%`, inline: true },
                    { name: '–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞', value: `${windSpeed} –º/—Å`, inline: true },
                    { name: '–î–∞–≤–ª–µ–Ω–∏–µ', value: `${pressure} –º–º —Ä—Ç.—Å—Ç.`, inline: true }
                )
                .setFooter({ text: '–î–∞–Ω–Ω—ã–µ OpenWeatherMap' })
                .setTimestamp();
                
            await interaction.editReply({ embeds: [weatherEmbed] });
            
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ:', error);
            
            let errorMessage = '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ.';
            
            if (error.response && error.response.status === 404) {
                errorMessage = `–ì–æ—Ä–æ–¥ "${city}" –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è.`;
            } else if (error.response && error.response.status === 401) {
                errorMessage = '–û—à–∏–±–∫–∞ API –∫–ª—é—á–∞. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –±–æ—Ç–∞.';
            }
            
            await interaction.editReply({ content: errorMessage, ephemeral: true });
        }
    }
}; 