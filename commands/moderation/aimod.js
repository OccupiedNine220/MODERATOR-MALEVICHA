const { SlashCommandBuilder, EmbedBuilder, PermissionFlagsBits } = require('discord.js');
const { testModeration } = require('../../features/aiModeration');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('–∞–∏-—Ç–µ—Å—Ç')
        .setDescription('–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ò–ò –º–æ–¥–µ—Ä–∞—Ü–∏—é –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–º —Ç–µ–∫—Å—Ç–µ')
        .addStringOption(option =>
            option.setName('—Ç–µ–∫—Å—Ç')
                .setDescription('–¢–µ–∫—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏')
                .setRequired(true))
        .setDefaultMemberPermissions(PermissionFlagsBits.ModerateMembers),
    
    async execute(interaction) {
        await interaction.deferReply();
        
        const testText = interaction.options.getString('—Ç–µ–∫—Å—Ç');
        
        try {
            // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —á–µ—Ä–µ–∑ –ò–ò
            const analysis = await testModeration(testText);
            
            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–µ—Ä—å–µ–∑–Ω–æ—Å—Ç–∏ –Ω–∞—Ä—É—à–µ–Ω–∏—è
            let color = 0x2ECC71; // –ó–µ–ª–µ–Ω—ã–π (–Ω–µ—Ç –Ω–∞—Ä—É—à–µ–Ω–∏–π)
            if (analysis.violation_detected) {
                if (analysis.severity >= 7) {
                    color = 0xFF0000; // –ö—Ä–∞—Å–Ω—ã–π (—Å–µ—Ä—å–µ–∑–Ω–æ–µ –Ω–∞—Ä—É—à–µ–Ω–∏–µ)
                } else if (analysis.severity >= 4) {
                    color = 0xFFCC00; // –ñ–µ–ª—Ç—ã–π (—Å—Ä–µ–¥–Ω–µ–µ –Ω–∞—Ä—É—à–µ–Ω–∏–µ)
                } else if (analysis.severity >= 2) {
                    color = 0x3498DB; // –°–∏–Ω–∏–π (–ª–µ–≥–∫–æ–µ –Ω–∞—Ä—É—à–µ–Ω–∏–µ)
                }
            }
            
            // –°–æ–∑–¥–∞–µ–º —Ç–∏–ø—ã –Ω–∞—Ä—É—à–µ–Ω–∏–π –Ω–∞ —Ä—É—Å—Å–∫–æ–º
            const violationTypes = {
                HATE: '–ù–µ–Ω–∞–≤–∏—Å—Ç–Ω–∏—á–µ—Å–∫–æ–µ –≤—ã—Å–∫–∞–∑—ã–≤–∞–Ω–∏–µ',
                HARASSMENT: '–î–æ–º–æ–≥–∞—Ç–µ–ª—å—Å—Ç–≤–æ/–¢—Ä–∞–≤–ª—è',
                SEXUAL: '–°–µ–∫—Å—É–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç',
                VIOLENCE: '–ù–∞—Å–∏–ª–∏–µ/–ñ–µ—Å—Ç–æ–∫–æ—Å—Ç—å',
                SELF_HARM: '–°–∞–º–æ–ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏–µ',
                ILLEGAL: '–ù–µ–∑–∞–∫–æ–Ω–Ω–∞—è –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å',
                SPAM: '–°–ø–∞–º/–ù–µ–∂–µ–ª–∞—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç',
                NONE: '–ù–µ—Ç –Ω–∞—Ä—É—à–µ–Ω–∏–π'
            };
            
            // –ü–æ–ª—É—á–∞–µ–º –¥–µ–π—Å—Ç–≤–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –±—ã–ª–æ –±—ã –ø—Ä–µ–¥–ø—Ä–∏–Ω—è—Ç–æ
            let actionTaken = '–ù–µ—Ç –¥–µ–π—Å—Ç–≤–∏–π';
            if (analysis.violation_detected) {
                if (analysis.severity >= 7) {
                    actionTaken = '–£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è + —Ç–∞–π–º–∞—É—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è';
                } else if (analysis.severity >= 4) {
                    actionTaken = '–£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è';
                } else if (analysis.severity >= 2) {
                    actionTaken = '–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –±–µ–∑ —É–¥–∞–ª–µ–Ω–∏—è';
                }
            }
            
            // –°–æ–∑–¥–∞–µ–º —ç–º–±–µ–¥ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –∞–Ω–∞–ª–∏–∑–∞
            const resultEmbed = new EmbedBuilder()
                .setTitle('ü§ñ –†–µ–∑—É–ª—å—Ç–∞—Ç AI –∞–Ω–∞–ª–∏–∑–∞')
                .setColor(color)
                .setDescription(`**–¢–µ–∫—Å—Ç**: ${testText.length > 100 ? testText.substring(0, 100) + '...' : testText}`)
                .addFields(
                    { name: '–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –Ω–∞—Ä—É—à–µ–Ω–∏–µ', value: analysis.violation_detected ? '–î–∞ ‚ö†Ô∏è' : '–ù–µ—Ç ‚úÖ', inline: true },
                    { name: '–¢–∏–ø –Ω–∞—Ä—É—à–µ–Ω–∏—è', value: violationTypes[analysis.primary_violation_type], inline: true },
                    { name: '–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å', value: `${(analysis.confidence * 100).toFixed(1)}%`, inline: true },
                    { name: '–°–µ—Ä—å–µ–∑–Ω–æ—Å—Ç—å', value: `${analysis.severity}/10`, inline: true },
                    { name: '–î–µ–π—Å—Ç–≤–∏–µ', value: actionTaken, inline: true },
                    { name: '–û–±—ä—è—Å–Ω–µ–Ω–∏–µ', value: analysis.explanation || '–ù–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ', inline: false }
                )
                .setFooter({ text: 'GROQ ‚Ä¢ Llama Guard AI –ú–æ–¥–µ—Ä–∞—Ü–∏—è' })
                .setTimestamp();
            
            await interaction.editReply({ embeds: [resultEmbed] });
            
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ AI –º–æ–¥–µ—Ä–∞—Ü–∏–∏:', error);
            await interaction.editReply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ AI –º–æ–¥–µ—Ä–∞—Ü–∏–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.');
        }
    }
}; 