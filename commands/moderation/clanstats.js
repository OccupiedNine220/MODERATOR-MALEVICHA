const { SlashCommandBuilder, EmbedBuilder, AttachmentBuilder } = require('discord.js');
const { Clan } = require('../../models/schema');
const Canvas = require('canvas');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('clanstats')
        .setDescription('–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–ª–∞–Ω–æ–≤')
        .addSubcommand(subcommand =>
            subcommand
                .setName('top')
                .setDescription('–ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ø –∫–ª–∞–Ω–æ–≤ –ø–æ —É—Ä–æ–≤–Ω—é –∏ —Å–∏–ª–µ'))
        .addSubcommand(subcommand =>
            subcommand
                .setName('chart')
                .setDescription('–ü–æ–∫–∞–∑–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∫–ª–∞–Ω–æ–≤')),
                
    async execute(interaction) {
        const subcommand = interaction.options.getSubcommand();
        
        switch (subcommand) {
            case 'top':
                await showTopClans(interaction);
                break;
            case 'chart':
                await showClanChart(interaction);
                break;
        }
    }
};

async function showTopClans(interaction) {
    await interaction.deferReply();
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–ª–∞–Ω—ã, —Å–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ —É—Ä–æ–≤–Ω—é –∏ —Å–∏–ª–µ
    const clans = await Clan.find().sort({ level: -1, power: -1, exp: -1 });
    
    if (clans.length === 0) {
        return interaction.editReply('–ù–∞ —Å–µ—Ä–≤–µ—Ä–µ –ø–æ–∫–∞ –Ω–µ—Ç –∫–ª–∞–Ω–æ–≤!');
    }
    
    const embed = new EmbedBuilder()
        .setTitle('üèÜ –¢–æ–ø –∫–ª–∞–Ω–æ–≤')
        .setDescription('–†–µ–π—Ç–∏–Ω–≥ –∫–ª–∞–Ω–æ–≤ —Å–µ—Ä–≤–µ—Ä–∞ –ø–æ —É—Ä–æ–≤–Ω—é –∏ —Å–∏–ª–µ')
        .setColor('#FFD700')
        .setTimestamp();
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —ç–º–æ–¥–∑–∏ –¥–ª—è —Ç–æ–ø-3
    const rankEmojis = ['ü•á', 'ü•à', 'ü•â'];
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–ª–∞–Ω–∞ –≤ —Ç–æ–ø-10
    clans.slice(0, 10).forEach((clan, index) => {
        const rankDisplay = index < 3 ? rankEmojis[index] : `${index + 1}.`;
        
        embed.addFields({
            name: `${rankDisplay} ${clan.emoji} ${clan.name}`,
            value: `–£—Ä–æ–≤–µ–Ω—å: ${clan.level} | –°–∏–ª–∞: ${clan.power} | –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: ${clan.members.length}\n–í–ª–∞–¥–µ–ª–µ—Ü: <@${clan.owner}>`
        });
    });
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    const totalMembers = clans.reduce((sum, clan) => sum + clan.members.length, 0);
    const avgLevel = (clans.reduce((sum, clan) => sum + clan.level, 0) / clans.length).toFixed(1);
    const avgPower = (clans.reduce((sum, clan) => sum + clan.power, 0) / clans.length).toFixed(1);
    
    embed.addFields({
        name: 'üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞',
        value: `–í—Å–µ–≥–æ –∫–ª–∞–Ω–æ–≤: ${clans.length}\n–í—Å–µ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –∫–ª–∞–Ω–∞—Ö: ${totalMembers}\n–°—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å –∫–ª–∞–Ω–∞: ${avgLevel}\n–°—Ä–µ–¥–Ω—è—è —Å–∏–ª–∞ –∫–ª–∞–Ω–∞: ${avgPower}`
    });
    
    await interaction.editReply({ embeds: [embed] });
}

async function showClanChart(interaction) {
    await interaction.deferReply();
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–ª–∞–Ω—ã
    const clans = await Clan.find();
    
    if (clans.length === 0) {
        return interaction.editReply('–ù–∞ —Å–µ—Ä–≤–µ—Ä–µ –ø–æ–∫–∞ –Ω–µ—Ç –∫–ª–∞–Ω–æ–≤!');
    }
    
    // –°–æ–∑–¥–∞–µ–º canvas –¥–ª—è –¥–∏–∞–≥—Ä–∞–º–º—ã
    const canvas = Canvas.createCanvas(800, 600);
    const ctx = canvas.getContext('2d');
    
    // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ–Ω
    ctx.fillStyle = '#2b2d31';
    ctx.fillRect(0, 0, canvas.width, canvas.height);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
    ctx.font = 'bold 36px sans-serif';
    ctx.fillStyle = '#ffffff';
    ctx.textAlign = 'center';
    ctx.fillText('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–ª–∞–Ω–æ–≤', canvas.width / 2, 50);
    
    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∞–Ω—ã –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    clans.sort((a, b) => b.members.length - a.members.length);
    
    // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–æ 8 –∫–ª–∞–Ω–æ–≤ –¥–ª—è –¥–∏–∞–≥—Ä–∞–º–º—ã
    const topClans = clans.slice(0, 8);
    
    // –†–∏—Å—É–µ–º —Å—Ç–æ–ª–±—á–∞—Ç—É—é –¥–∏–∞–≥—Ä–∞–º–º—É –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    const barWidth = 60;
    const spacing = 40;
    const startX = (canvas.width - (topClans.length * (barWidth + spacing) - spacing)) / 2;
    const maxHeight = 300;
    const maxMembers = Math.max(...topClans.map(clan => clan.members.length));
    
    // –†–∏—Å—É–µ–º –æ—Å–∏
    ctx.beginPath();
    ctx.strokeStyle = '#888888';
    ctx.lineWidth = 2;
    ctx.moveTo(50, 100);
    ctx.lineTo(50, 500);
    ctx.lineTo(750, 500);
    ctx.stroke();
    
    // –†–∏—Å—É–µ–º —Å—Ç–æ–ª–±—Ü—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–ª–∞–Ω–∞
    topClans.forEach((clan, index) => {
        const x = startX + index * (barWidth + spacing);
        const height = (clan.members.length / maxMembers) * maxHeight;
        const y = 500 - height;
        
        // –†–∏—Å—É–µ–º —Å—Ç–æ–ª–±–µ—Ü
        ctx.fillStyle = getRandomColor(index);
        ctx.fillRect(x, y, barWidth, height);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∞–Ω–∞
        ctx.font = 'bold 16px sans-serif';
        ctx.fillStyle = '#ffffff';
        ctx.textAlign = 'center';
        ctx.fillText(clan.name.substring(0, 10), x + barWidth / 2, 525);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        ctx.fillText(clan.members.length.toString(), x + barWidth / 2, y - 10);
    });
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–ø–∏—Å–∏ –æ—Å–µ–π
    ctx.font = 'bold 20px sans-serif';
    ctx.fillStyle = '#ffffff';
    ctx.textAlign = 'center';
    ctx.fillText('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤', canvas.width / 2, 550);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ª–∏–Ω–∏–∏ —Å–µ—Ç–∫–∏ –¥–ª—è –æ—Å–∏ Y
    ctx.font = '14px sans-serif';
    ctx.textAlign = 'right';
    ctx.strokeStyle = '#444444';
    ctx.lineWidth = 1;
    
    for (let i = 0; i <= 5; i++) {
        const y = 500 - (i * maxHeight / 5);
        const value = Math.round(i * maxMembers / 5);
        
        ctx.beginPath();
        ctx.moveTo(45, y);
        ctx.lineTo(750, y);
        ctx.stroke();
        
        ctx.fillText(value.toString(), 40, y + 5);
    }
    
    // –°–æ–∑–¥–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Discord
    const attachment = new AttachmentBuilder(canvas.toBuffer(), { name: 'clan-stats.png' });
    
    const embed = new EmbedBuilder()
        .setTitle('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–ª–∞–Ω–æ–≤')
        .setDescription('–ì—Ä–∞—Ñ–∏–∫ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ø–æ –∫–ª–∞–Ω–∞–º')
        .setImage('attachment://clan-stats.png')
        .setColor('#2b2d31')
        .setTimestamp();
    
    await interaction.editReply({ embeds: [embed], files: [attachment] });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Ü–≤–µ—Ç–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∏–Ω–¥–µ–∫—Å–∞
function getRandomColor(index) {
    const colors = [
        '#FF5555', // –∫—Ä–∞—Å–Ω—ã–π
        '#55FF55', // –∑–µ–ª–µ–Ω—ã–π
        '#5555FF', // —Å–∏–Ω–∏–π
        '#FFFF55', // –∂–µ–ª—Ç—ã–π
        '#FF55FF', // –ø—É—Ä–ø—É—Ä–Ω—ã–π
        '#55FFFF', // –≥–æ–ª—É–±–æ–π
        '#FF9955', // –æ—Ä–∞–Ω–∂–µ–≤—ã–π
        '#AA55FF'  // —Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–π
    ];
    
    return colors[index % colors.length];
} 