const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');
const { ModStats } = require('../../models/schema');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
        .setDescription('–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –±–æ—Ç–∞'),
    
    async execute(interaction) {
        const { client, guild } = interaction;
        
        await interaction.deferReply();
        
        try {
            // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤—Å–µ—Ö –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤ —Å–µ—Ä–≤–µ—Ä–∞
            const allModStats = await ModStats.find({ guildId: guild.id });
            
            // –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
            let totalBans = 0;
            let totalMutes = 0;
            let totalKicks = 0;
            let totalWarns = 0;
            
            // –ü–æ–¥—Å—á–µ—Ç –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
            allModStats.forEach(mod => {
                totalBans += mod.actions.bans;
                totalMutes += mod.actions.mutes;
                totalKicks += mod.actions.kicks;
                totalWarns += mod.actions.warns;
            });
            
            // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —É–¥–∞–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ –∫—ç—à–∞ –∫–ª–∏–µ–Ω—Ç–∞
            const deletedMessages = client.stats?.deletedMessages || 0;
            const editedMessages = client.stats?.editedMessages || 0;
            
            // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
            const totalActions = totalBans + totalMutes + totalKicks + totalWarns;
            const actionsPerMod = allModStats.length > 0 ? (totalActions / allModStats.length).toFixed(2) : 0;
            
            // –°–æ–∑–¥–∞–µ–º —ç–º–±–µ–¥
            const statsEmbed = new EmbedBuilder()
                .setTitle('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏')
                .setColor(0xE67E22)
                .addFields(
                    { name: '‚öíÔ∏è –ú–æ–¥–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è', value: `–ë–∞–Ω—ã: ${totalBans}\n–ú—É—Ç—ã: ${totalMutes}\n–ö–∏–∫–∏: ${totalKicks}\n–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è: ${totalWarns}`, inline: true },
                    { name: 'üìù –°–æ–æ–±—â–µ–Ω–∏—è', value: `–£–¥–∞–ª–µ–Ω–æ: ${deletedMessages}\n–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–æ: ${editedMessages}`, inline: true },
                    { name: 'üëÆ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', value: `–í—Å–µ–≥–æ –¥–µ–π—Å—Ç–≤–∏–π: ${totalActions}\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤: ${allModStats.length}\n–î–µ–π—Å—Ç–≤–∏–π –Ω–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞: ${actionsPerMod}`, inline: true }
                )
                .setFooter({ text: `–ó–∞–ø—Ä–æ—à–µ–Ω–æ ${interaction.user.tag}` })
                .setTimestamp();
                
            // –ï—Å–ª–∏ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã, –¥–æ–±–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —Ç–æ–ø-3
            if (allModStats.length > 0) {
                // –°–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤ –ø–æ –æ–±—â–µ–º—É –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –¥–µ–π—Å—Ç–≤–∏–π
                const sortedMods = allModStats.sort((a, b) => {
                    const totalA = a.actions.bans + a.actions.mutes + a.actions.kicks + a.actions.warns;
                    const totalB = b.actions.bans + b.actions.mutes + b.actions.kicks + b.actions.warns;
                    return totalB - totalA;
                });
                
                // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ø-3 –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤
                const topMods = sortedMods.slice(0, 3);
                
                // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö
                let topModsField = '';
                
                for (let i = 0; i < topMods.length; i++) {
                    const mod = topMods[i];
                    const user = await client.users.fetch(mod.userId).catch(() => null);
                    
                    if (user) {
                        const totalModActions = mod.actions.bans + mod.actions.mutes + mod.actions.kicks + mod.actions.warns;
                        topModsField += `${i + 1}. ${user.tag}: ${totalModActions} –¥–µ–π—Å—Ç–≤–∏–π\n`;
                    }
                }
                
                if (topModsField) {
                    statsEmbed.addFields({ name: 'üèÜ –õ—É—á—à–∏–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã', value: topModsField, inline: false });
                }
            }
            
            await interaction.editReply({ embeds: [statsEmbed] });
            
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –º–æ–¥–µ—Ä–∞—Ü–∏–∏:', error);
            await interaction.editReply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.');
        }
    }
}; 